{"version":3,"sources":["components/MapComponent.jsx","components/ImageCompontent.jsx","components/FrontPage.jsx","config.js","Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["MapComponent","socket","setImageUrls","useState","markerPos","setMarkerPos","distance","setDistance","undefined","roundPosition","setRoundPosition","nextAvailable","setNextAvailable","useEffect","on","data","console","log","defaultIcon","color","L","icon","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","html","MyMarker","useMapEvents","click","e","latlng","lat","lng","Marker","position","CorrectMarker","style","padding","MapContainer","center","zoom","height","width","margin","marginBottom","TileLayer","attribution","url","Typography","textAlign","toLocaleString","paddingBottom","Button","onClick","emit","variant","ImageComponent","currentIndex","setCurrentIndex","imgUrl","setImgUrl","imageUrls","myImageUrls","length","i","currKey","push","changeImage","newIndex","className","id","image","pitch","yaw","hfov","autoLoad","CircularProgress","ENDPOINT","window","location","hostname","FrontPage","setSocket","newSocket","socketIOClient","connect","Routes","to","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1053211.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport L from \"leaflet\";\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\nimport { MapContainer, TileLayer, Marker, useMapEvents } from \"react-leaflet\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nconst MapComponent = ({ socket, setImageUrls }) => {\r\n  const position = [51.505, -0.09];\r\n  const [markerPos, setMarkerPos] = useState([51.505, -0.09]);\r\n\r\n  const [distance, setDistance] = useState(-1);\r\n  const [roundPosition, setRoundPosition] = useState(undefined);\r\n\r\n  const [nextAvailable, setNextAvailable] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"handleCorrectPosition\", (data) => {\r\n      setDistance(+data[\"distance\"]);\r\n      console.log(data);\r\n      setRoundPosition(data[\"correctPosition\"]);\r\n      setNextAvailable(true);\r\n    });\r\n  }, [socket]);\r\n  const defaultIcon = (color) =>\r\n    L.icon({\r\n      iconUrl: icon,\r\n      shadowUrl: iconShadow,\r\n      iconSize: [25, 41],\r\n      iconAnchor: [10, 41],\r\n      html: `<span style=\"background-color:${color}\" />`,\r\n    });\r\n\r\n  const MyMarker = () => {\r\n    useMapEvents({\r\n      click(e) {\r\n        console.log(\"map cliiiick\", e);\r\n        setMarkerPos([e.latlng.lat, e.latlng.lng]);\r\n      },\r\n    });\r\n    return <Marker icon={defaultIcon(\"blue\")} position={markerPos} />;\r\n  };\r\n\r\n  const CorrectMarker = () => {\r\n    if (!roundPosition) return null;\r\n    return <Marker icon={defaultIcon(\"green\")} position={roundPosition} />;\r\n  };\r\n\r\n  const handleGuessSent = () => {\r\n    socket.emit(\"handleSendGuess\", {\r\n      position: { lat: markerPos[0], lng: markerPos[1] },\r\n    });\r\n  };\r\n\r\n  const handleNextPosition = () => {\r\n    socket.emit(\"handleGetNextPosition\", {});\r\n    setImageUrls([]);\r\n    setRoundPosition(undefined);\r\n    setNextAvailable(false);\r\n    setDistance(-1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <MapContainer\r\n        center={position}\r\n        zoom={2}\r\n        style={{\r\n          height: 400,\r\n          width: \"70%\",\r\n          // minWidth: 275,\r\n          margin: \"auto\",\r\n          marginBottom: 15,\r\n        }}\r\n      >\r\n        <MyMarker />\r\n        <CorrectMarker />\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n      </MapContainer>\r\n      {distance !== -1 && (\r\n        <Typography style={{ textAlign: \"center\" }}>\r\n          You were {distance.toLocaleString()} KM from the correct position.\r\n        </Typography>\r\n      )}\r\n      <div style={{ textAlign: \"center\", paddingBottom: 20 }}>\r\n        <Button onClick={handleGuessSent} variant=\"contained\">\r\n          Send\r\n        </Button>\r\n      </div>\r\n      {nextAvailable && (\r\n        <div style={{ textAlign: \"center\", paddingBottom: 20 }}>\r\n          <Button onClick={handleNextPosition} variant=\"contained\">\r\n            Get Next Position\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Pannellum } from \"pannellum-react\";\r\nimport { CircularProgress, Typography } from \"@material-ui/core\";\r\nimport \"./ImageComponent.css\";\r\nimport MapComponent from \"./MapComponent\";\r\n\r\nconst ImageComponent = ({ socket }) => {\r\n  const getImage = (imageKey) => {\r\n    socket.emit(\"getImageData\", { imageKey });\r\n    socket.on(\"getImage\", (data) => {});\r\n  };\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [imgUrl, setImgUrl] = useState(\"\");\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n\r\n  // 1024 640 or 2048\r\n  const getImageUrlFromKey = (key) => {\r\n    const _imgUrl = `https://images.mapillary.com/${key}/thumb-2048.jpg`;\r\n    // setImgUrl(_imgUrl);\r\n    return _imgUrl;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"sendSequence\", (data) => {\r\n      const myImageUrls = [];\r\n      if (data[\"features\"].length > 0) {\r\n        for (let i = 0; i < data[\"features\"].length; i++) {\r\n          const item = data[\"features\"][i];\r\n          const currKey = item[\"properties\"][\"key\"];\r\n          const url = getImageUrlFromKey(currKey);\r\n          myImageUrls.push(url);\r\n        }\r\n        setCurrentIndex(0);\r\n        setImageUrls(myImageUrls);\r\n        setImgUrl(myImageUrls[0]);\r\n      }\r\n    });\r\n  }, [socket]);\r\n\r\n  const changeImage = (newIndex) => {\r\n    setImgUrl(imageUrls[newIndex]);\r\n  };\r\n\r\n  const incIndex = () => {\r\n    let newIndex = -1;\r\n    if (currentIndex === imageUrls.length - 1) {\r\n      newIndex = 0;\r\n      setCurrentIndex(0);\r\n    } else {\r\n      newIndex = currentIndex + 1;\r\n      setCurrentIndex(currentIndex + 1);\r\n    }\r\n    changeImage(newIndex);\r\n  };\r\n\r\n  const decIndex = () => {\r\n    let newIndex = -1;\r\n    if (currentIndex === 0) {\r\n      setCurrentIndex(imageUrls.length - 1);\r\n      newIndex = imageUrls.length - 1;\r\n    } else {\r\n      setCurrentIndex(currentIndex - 1);\r\n      newIndex = currentIndex - 1;\r\n    }\r\n    changeImage(newIndex);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {imageUrls.length > 0 ? (\r\n        <div className=\"pano-container\">\r\n          <Typography style={{ textAlign: \"center\" }}>\r\n            {currentIndex + 1} / {imageUrls.length}{\" \"}\r\n          </Typography>\r\n          <button className=\"pano-btn\" id=\"pano-prev-btn\" onClick={decIndex}>\r\n            <i className=\"arrow arrow-left\"></i>\r\n          </button>\r\n          <button\r\n            className=\"pano-btn arrow-right\"\r\n            id=\"pano-next-btn\"\r\n            onClick={incIndex}\r\n          >\r\n            <i className=\"arrow\"></i>\r\n          </button>\r\n\r\n          <Pannellum\r\n            width=\"100%\"\r\n            height=\"500px\"\r\n            image={imgUrl}\r\n            pitch={10}\r\n            yaw={180}\r\n            hfov={110}\r\n            autoLoad\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <MapComponent socket={socket} setImageUrls={setImageUrls} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport ImageComponent from \"./ImageCompontent\";\r\nimport { config } from \"../config\";\r\n\r\nconst ENDPOINT = config.ENDPOINT;\r\nconst FrontPage = () => {\r\n  const [socket, setSocket] = useState(undefined);\r\n  useEffect(() => {\r\n    const newSocket = socketIOClient.connect(ENDPOINT);\r\n    setSocket(newSocket);\r\n    newSocket.on(\"connectedToRoomCallBack\", (data) => {});\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h2>Map game</h2>\r\n        <p>Still in development</p>\r\n      </div>\r\n      <ImageComponent socket={socket} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","export const config = {\r\n  ENDPOINT:\r\n    process.env.NODE_ENV === \"production\"\r\n      ? window.location.hostname\r\n      : \"http://localhost:8000\",\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport FrontPage from \"./components/FrontPage\";\r\n\r\nexport const frontPagePath = \"/\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route to={frontPagePath} component={FrontPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}